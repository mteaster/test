@model IEnumerable<test.Models.Budget.AccountReceivables>

<script type="text/javascript" src="../../Scripts/jquery.tablesorter.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $("#AccountReceivableTable").tablesorter();
    }
    );

    $(function () {

        $(document).on("click", "input.chks", function (e) {
            var _this = $(this);
            var isChecked = _this.is(':checked');
            $.post("@Url.Action("UpdateAccountReceivable","Budget")?id=" + _this.attr("id") +
                                          "&newValue=" + isChecked, function (data) {
                                              // do something with the response
                                          });

        });
    });
</script>

<style>
    td {
        padding: 5px;
    }
    th {
        padding: 5px;
    }
</style>

@if (Model != null)
{
<table id="AccountReceivableTable" class="tablesorter">
    <thead>
        <tr>
            <th>Amount</th>
            <th>Date</th>
            <th>Category</th>
            <th>Band Contact</th>
            <th>Person Contact</th>
            <th>Venue Contact</th>
            <th>Paid</th>
        </tr>
    </thead>
    <tbody>
    @foreach (test.Models.Budget.AccountReceivables accountReceivable in Model)
    {
        <tr>
            <td>@Html.DisplayFor(ModelItem => accountReceivable.Amount)</td>
            <td>@accountReceivable.Date.ToShortDateString()</td>
                <td>
                    @if (!string.IsNullOrEmpty(accountReceivable.AssociatedBandName))
                    {
                    @Html.ActionLink(accountReceivable.AssociatedBandName, "EditContact", "Rolodex", new {bandId = ViewBag.BandId, contactId = accountReceivable.AssociatedBandContactId, type = test.Models.Rolodex.ContactType.Band})
                    }
                </td>
                <td>
                    @if (!string.IsNullOrEmpty(accountReceivable.AssociatedPersonName))
                    {
                    @Html.ActionLink(accountReceivable.AssociatedPersonName, "EditContact", "Rolodex", new {bandId = ViewBag.BandId, contactId = accountReceivable.AssociatedPersonContactId, type = test.Models.Rolodex.ContactType.People})
                    }
                    </td>
                <td>
                    @if (!string.IsNullOrEmpty(accountReceivable.AssociatedVenueName))
                    {
                    @Html.ActionLink(accountReceivable.AssociatedVenueName, "EditContact", "Rolodex", new {bandId = ViewBag.BandId, contactId = accountReceivable.AssociatedVenueContactId, type = test.Models.Rolodex.ContactType.Venue})
                    }
                    </td>
                 <td>@Html.CheckBoxFor(ModelItem => accountReceivable.Paid, new { @id=accountReceivable.AccountReceivableId, @class="chks"})</td>
        </tr>
    }   
    </tbody>
</table>
}
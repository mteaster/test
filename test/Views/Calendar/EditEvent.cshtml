@model test.Models.Calendar.EditEventModel

@{
    ViewBag.Title = "Edit Event";
}

<style type="text/css">
    ul li{
        display: inline-block;
        list-style-type: none;
        padding-right: 10px;
    }
    ul{
        margin:0px 0;
        padding:0;
    }
</style>

@using (Html.BeginForm("EditEvent", "Calendar", new { bandId = ViewBag.BandId, eventId = ViewBag.EventId}, FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()

    <fieldset>
        <legend>Add Event Form</legend>
        <ol>
            <li>
                @Html.LabelFor(m => m.EventTitle)
                @Html.TextBoxFor(m => m.EventTitle)
            </li>
            <li>
                @Html.LabelFor(m => m.EventDescription)
                @Html.EditorFor(model => model.EventDescription)
            </li>
        </ol>
    </fieldset>
    
    <link rel="stylesheet" href="http://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css" />
    <script src="http://code.jquery.com/jquery-1.9.1.js"></script>
    <script src="http://code.jquery.com/ui/1.10.3/jquery-ui.js"></script>
    <link rel="stylesheet" href="/resources/demos/style.css" />
    <script>
        $(function ()
        {
            $("#datepicker").datepicker();
        });
    </script>
    
    <fieldset>
        <br>
        <label for="Time">Time</label>
        <ul>
            <li>
                @{
                    List<SelectListItem> hours = new List<SelectListItem>();
                    hours.Add(new SelectListItem { Text = "1", Value = "1", Selected = true});
                    hours.Add(new SelectListItem { Text = "2", Value = "2" });
                    hours.Add(new SelectListItem { Text = "3", Value = "3" });
                    hours.Add(new SelectListItem { Text = "4", Value = "4" });
                    hours.Add(new SelectListItem { Text = "5", Value = "5" });
                    hours.Add(new SelectListItem { Text = "6", Value = "6" });
                    hours.Add(new SelectListItem { Text = "7", Value = "7" });
                    hours.Add(new SelectListItem { Text = "8", Value = "8" });
                    hours.Add(new SelectListItem { Text = "9", Value = "9" });
                    hours.Add(new SelectListItem { Text = "10", Value = "10" });
                    hours.Add(new SelectListItem { Text = "11", Value = "11" });
                    hours.Add(new SelectListItem { Text = "12", Value = "12" });
                }               
                @Html.DropDownListFor(m => m.EventHour, hours)
            </li>
            <li>   
                @{
                    List<SelectListItem> min = new List<SelectListItem>();
                    min.Add(new SelectListItem { Text = "00", Value = "00", Selected = true });
                    min.Add(new SelectListItem { Text = "05", Value = "05" });
                    min.Add(new SelectListItem { Text = "10", Value = "10" });
                    min.Add(new SelectListItem { Text = "15", Value = "15" });
                    min.Add(new SelectListItem { Text = "20", Value = "20" });
                    min.Add(new SelectListItem { Text = "25", Value = "25" });
                    min.Add(new SelectListItem { Text = "30", Value = "30" });
                    min.Add(new SelectListItem { Text = "35", Value = "35" });
                    min.Add(new SelectListItem { Text = "40", Value = "40" });
                    min.Add(new SelectListItem { Text = "45", Value = "45" });
                    min.Add(new SelectListItem { Text = "50", Value = "50" });
                    min.Add(new SelectListItem { Text = "55", Value = "55" });
                }
                @Html.DropDownListFor(m => m.EventMinute, min)
            </li>
            <li>
                @{
                    List<SelectListItem> period = new List<SelectListItem>();
                    period.Add(new SelectListItem { Text = "AM", Value = "AM", Selected = true });
                    period.Add(new SelectListItem { Text = "PM", Value = "PM" });
                }
                @Html.DropDownListFor(m => m.EventPeriod, period)
            </li>
        </ul>
        <br>
        <input type="submit" value="Edit Event" />
    </fieldset>
}
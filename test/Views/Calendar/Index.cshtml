@model test.Models.Calendar.MonthModel


@{
    ViewBag.Title = "Calendar";
}


@section featured 
{
    @Html.Partial("_BandHeaderPartial")
}

<p class="message-success">@ViewBag.SuccessMessage</p>
<p class="message-error">@ViewBag.ErrorMessage</p>

<style type="text/css">
    #calendar-table 
    {
        width: 716px; /* 100 per cell + borders */
        background:#ffffff;
        border: 1px solid #b1b1b1;
    }
    #calendar-table th
    {
        vertical-align:top;
        width: 100px;
        height: 20px; /* will vary with content */
        padding: 4px;
        background: #f8f8f8;
        border: 1px solid #b1b1b1;
    }
    #calendar-table td
    {
        vertical-align:top;
        width: 100px;
        height: 100px; /* will vary with content */
        padding:4px;
        background: #f8f8f8;
        border: 1px solid #b1b1b1;
    }
    #calendar-table td:hover
    {
        background: #CCFFFF;
    }
    #calendar-table td:active
    {
        background: #6699FF;
    }
    a.boxlink
    {
        width: 100%;
        height: 100%;
        display: block;
    }
    #calendar-table td p
    {
        text-align: center;
    }
    #header 
    {
        background:#000000;
        color:#ffffff;
        font-weight:700;
        padding:12px;
        text-align: center;
    }
    #descr
    {
        background:#ffffff;
        font-style:italic;
        padding:12px;
        text-align: center;
    }
    td.event
    {
        background-color: #B0B0B0 !important;
    }
</style>

<span>Events for @Model.MonthName @Model.CurrentMonthYear</span>

<table id="calendar-table" cellpadding="0" cellspacing="0">
    <thead>
        <tr>
            <th>Sunday</th>
            <th>Monday</th>
            <th>Tuesday</th>
            <th>Wednesday</th>
            <th>Thursday</th>
            <th>Friday</th>
            <th>Saturday</th>
        </tr>
    </thead> 

    <tbody>

        <tr>
        @for (int i = 0; i < Model.FirstDayOfWeek; i++ )
        {
            <td></td>   
        }

        @{
            int currentDayOfWeek = Model.FirstDayOfWeek;
            int currentDay = 1;

            var monthEvents = Model.Events;
           
            bool hasEvent;
            
            while(currentDay <= Model.DaysInMonth)
            {
                hasEvent = false;
                if(currentDayOfWeek == 7)
                {
                    currentDayOfWeek = 0;
                    @:</tr><tr>
                }
                
                if(monthEvents != null)
                {
                    //checking to see if a given day has an event(s) for indicating if it has events
                    foreach ( test.Models.Calendar.CalendarEvent ev in monthEvents)
                    {
                        if (ev.EventTime.Day == currentDay)
                        {
                            hasEvent = true;
                        }
                    }
                }
                
                if(hasEvent)
                {
                    <td class="event">
                        @Html.ActionLink(currentDay.ToString(), "Day", new { bandId = ViewBag.bandId, day = currentDay, month = Model.CurrentMonth, year = Model.CurrentMonthYear })
                    </td>
                }
                else
                {
                    <td>
                        @Html.ActionLink(currentDay.ToString(), "Day", new { bandId = ViewBag.bandId, day = currentDay, month = Model.CurrentMonth, year = Model.CurrentMonthYear })
                    </td>
                }              
        
                currentDayOfWeek++;
                currentDay++;   
            }
            
            for (; currentDayOfWeek < 7; currentDayOfWeek++)
            {
                <td></td>   
            }
        }

        </tr>
    </tbody>
</table>

@Html.ActionLink("Last month", "Month", "Calendar", 
                        new { bandId = ViewBag.BandId, month = Model.PreviousMonth, year = Model.PreviousMonthYear }, null)

@Html.ActionLink("Next month", "Month", "Calendar",
                        new { bandId = ViewBag.BandId, month = Model.NextMonth, year = Model.NextMonthYear }, null)
    